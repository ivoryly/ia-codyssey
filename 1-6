import random

class DummySensor:
    def __init__(self):
        self.env_values = {
            'mars_base_internal_temperature': None,      # 18 ~ 30°C
            'mars_base_external_temperature': None,      # 0 ~ 21°C
            'mars_base_internal_humidity': None,         # 50 ~ 60%
            'mars_base_external_illuminance': None,      # 500 ~ 715 W/m2
            'mars_base_internal_co2': None,              # 0.02 ~ 0.1%
            'mars_base_internal_oxygen': None            # 4 ~ 7%
        }
        
    def set_env(self):
        self.env_values['mars_base_internal_temperature'] = round(random.uniform(18, 30), 2)
        self.env_values['mars_base_external_temperature'] = round(random.uniform(0, 21), 2)
        self.env_values['mars_base_internal_humidity'] = round(random.uniform(50, 60), 2)
        self.env_values['mars_base_external_illuminance'] = round(random.uniform(500, 715), 2)
        self.env_values['mars_base_internal_co2'] = round(random.uniform(0.02, 0.1), 4)
        self.env_values['mars_base_internal_oxygen'] = round(random.uniform(4, 7), 2)

    def get_env(self):
        log_entry = (
            f'내부 온도: {self.env_values['mars_base_internal_temperature']}°C, '
            f'외부 온도: {self.env_values['mars_base_external_temperature']}°C, '
            f'내부 습도: {self.env_values['mars_base_internal_humidity']}%, '
            f'외부 광량: {self.env_values['mars_base_external_illuminance']} W/m2, '
            f'내부 CO2: {self.env_values['mars_base_internal_co2']}%, '
            f'내부 O2: {self.env_values['mars_base_internal_oxygen']}%\n'
        )
      
        with open('log.txt', 'a', encoding='utf-8') as f:
            f.write(log_entry)
        print(log_entry)

        return self.env_values


if __name__ == "__main__":
    ds = DummySensor()
    ds.set_env()
    env_data = ds.get_env()
    
    print('<<<Dummy Sensor Environmental Data>>>')
    for key, value in env_data.items():
        print(f"{key}: {value}")
